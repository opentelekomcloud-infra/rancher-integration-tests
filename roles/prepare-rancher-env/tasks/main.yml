---
# tasks file for prepare-rancher-env
- name: Install required pip packages
  pip:
    state: present
    name: "{{ packages }}"

- name: Allow required port on zuul iptables
  become: yes
  iptables:
    chain: INPUT
    action: insert
    jump: ACCEPT
    protocol: tcp
    destination_port: 8003

- name: Start Rancher container
  docker_container:
    name: rancher
    image: "{{ rancher_image }}"
    published_ports:
      - "{{ rancher_port }}:443"
    # container_default_behavior: no_defaults
    restart_policy: unless-stopped
    detach: yes
    privileged: yes
    pull: yes
  register: rancher_container

- name: Start Selenium CHROME container
  docker_container:
    name: selenium-chrome
    image: "{{ selenium_chrome_image }}"
    published_ports:
      - "{{ selenium_port }}:4444"
    # container_default_behavior: no_defaults
    restart_policy: unless-stopped
    detach: yes
    pull: yes
  register: selenium_container

- name: Get default rancher login token
  uri:
    url: 'https://{{ bind_host }}:{{ rancher_port }}/v3-public/localProviders/local?action=login'
    method: POST
    body: {"username":"admin", "password":"admin"}
    status_code: 201
    body_format: json
    validate_certs: False
  when: rancher_container.changed
  register: login_result
  until: login_result.status == 201
  retries: 10
  delay: 10
  failed_when: login_result.status not in [201]

- name: Set rancher URL
  uri:
    url: 'https://{{ bind_host }}:{{ rancher_port }}/v3/settings/server-url'
    method: PUT
    body: {"name":"server-url", "value":"https://{{ bind_host }}"}
    headers:
      Authorization: "Bearer {{ login_result.json.token }}"
    status_code: 200
    body_format: json
    validate_certs: False
  when: login_result is defined and login_result.json is defined
  register: url_result
  until: url_result.status == 200
  retries: 3
  delay: 10
  failed_when: url_result.status not in [200]

- name: Set rancher password
  uri:
    url: 'https://{{ bind_host}}:{{ rancher_port }}/v3/users?action=changepassword'
    method: POST
    body: {"currentPassword":"admin", "newPassword":"{{ lookup('env', 'RANCHER_PASSWORD') }}"}
    headers:
      Authorization: "Bearer {{ login_result.json.token }}"
    status_code: 200
    body_format: json
    validate_certs: False
  when: rancher_container.changed
  register: password_result
  until: password_result.status == 200
  retries: 3
  delay: 10
  failed_when: password_result.status not in [200]
